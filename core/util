#! /usr/local/bin/bash
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

sql() {
    mycli -u "$DB_USERNAME" --pass "$DB_PASSWORD" -h "$DB_HOST" -D "$DB_DATABASE" -e "$1"
}

remove_first_line_from_sql_output() {
    echo "$1" | sed -n '1!p' | sed -E "s/\"//g";
}

api_call() {
    #Parameter 1 is URL
    #parameter 2 is Payload
    #Parameter 3 is optional and it's the method
    METHOD=$([ $3 ] && echo $3 || echo POST)\
    
    curl "$1" \
    -H 'Accept: application/json, text/plain, */*' \
    -H 'Referer: https://dev.passportcenter.com/checkout/step4' \
    -H 'Origin: https://dev.passportcenter.com' \
    -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36' \
    -H 'Content-Type: application/json;charset=UTF-8' \
    --cookie "$COOKIE" \
    -X "$METHOD" \
    --data-binary $"$2" --compressed
}

get_cookie() {
    if [[ "$1" == "admin" ]]
    then
        SESSION=$(login '{"email": "'$ADMIN_EMAIL'", "password": "'$ADMIN_PASS'"}' | grep set-cookie: | awk '{print $2}')
        COOKIE=$SESSION
        echo "Admin Login Cookie: $SESSION"
    else
        SESSION=$(login '{"email": "'$1'", "password": "'$PASSWORD'"}' | grep set-cookie: | awk '{print $2}')
        COOKIE=$SESSION
        echo "Login Cookie: $SESSION"
    fi
}

get_lead_uuid() {
    QUERY="SELECT uuid from hot_leads WHERE email = '$1'"
    sql "$QUERY";
}

get_request() {
    curl $1 \
    --cookie $COOKIE \
    -H 'HOST: api.dev.govworks.com' \
    -H 'Connection: close' \
    -H 'User-Agent: Paw/3.1.7 (Macintosh; OS X/10.14.2) GCDHTTPRequest'
}

# LOGIN AND GET COOKIE
login() {
    curl -sD - -o /dev/null "$API_URL/auth/login" \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json; charset=UTF-8' \
    -H 'Referer: https://dev.passportcenter.com/' \
    -H 'Origin: https://dev.passportcenter.com' \
    --request POST \
    --data-binary $"$1" --compressed
}

# Magic https://stackoverflow.com/a/449890
set_name() {
    FULLNAME=$(head -$((${RANDOM} % `wc -l < ./data/names.txt` + 1)) ./data/names.txt | tail -1)
    export FIRSTNAME=$(cut -d',' -f1 <<< $FULLNAME )
    export LASTNAME=$(cut -d',' -f2 <<< $FULLNAME )
    export MIDDLENAME=$(cut -d',' -f3 <<< $FULLNAME )
}

set_user_password_to_password() {
    CHANGE_PASSWORD_QUERY="UPDATE users SET password = '\$2y\$10\$D0C7hvq5m5eK.ccKTlIi4.KmrJL7ULj5.SxnGdwv/d/RIWLYqKV4G', new = 0 WHERE email = '$1'"
    sql "$CHANGE_PASSWORD_QUERY"
}

run() {
    /usr/local/bin/bash $ROOT_DIRECTORY/$@
}

random_email() {
    ID="$(printf '%x\n' $(python -c 'from time import time; print int(round(time() * 1000))'))"
    echo "$EMAIL_BASE+$ID@govworks.com"
}

get_product() {
    # $1 is the product

    declare -A PRODUCTS
    #Products
    PRODUCTS[NEW_PASSPORT]=26a4caca-4a23-4330-91f7-48f6870e126e;
    PRODUCTS[PASSPORT_RENEWAL]=74d9a12f-5b7e-41d7-98bb-17c90140510c;
    PRODUCTS[CHILD_PASSPORT]=47ade3e3-a858-429f-8056-f14e1f643bc5;
    PRODUCTS[LOST_PASSPORT]=79107f86-17e4-4fb5-9433-140bf92863bf;
    PRODUCTS[DAMAGED_PASSPORT]=68503f3d-d5e0-409e-9417-f5a3d4521d48;
    PRODUCTS[NAME_CHANGE]=09e04608-1c94-4304-b950-7dde1e3e90e9;
    PRODUCTS[SECOND_PASSPORT]=ffb647e7-ef91-4483-ad67-e2299d79f31a;
    PRODUCTS[STOLEN_PASSPORT]=0c757ff5-5930-4352-bfb7-8e6a8054ded6;

    echo ${PRODUCTS[$1]}
}

get_option_pc() {
    # $1 is the option

    declare -A OPTIONSPC
    #Expediting options PC
    OPTIONSPC[SAME_DAY]="f3952d48-c3ef-4544-993f-2e3e9d2ef8c9"
    OPTIONSPC[NEXT_DAY]="00a6bb18-b1bb-4f38-9afb-b27396c65821"
    OPTIONSPC[PRIORITY]="0f1596dd-16d8-4c99-ab11-89b07efb662e"
    OPTIONSPC[RUSH]="5bcfe733-806d-4f43-b41c-5c9cb78ad39c"
    OPTIONSPC[STANDARD]="e8e275d1-d370-4c00-af3e-2de7f3e29e68"
    OPTIONSPC[SMART]="4f8799a0-b1f1-4e51-ae2f-c968c1c8fbca"

    echo ${OPTIONSPC[$1]}
}

get_option_pr() {
    # $1 is the option

    declare -A OPTIONSPR
    #Expediting options PR
    OPTIONSPR[SAME_DAY]="ed7a01e2-8beb-469a-957f-50ba064bf3a5"
    OPTIONSPR[NEXT_DAY]="b10f87b1-b056-46de-94ce-2f0fb5215e84"
    OPTIONSPR[PRIORITY]="8a3a2caa-ff20-4cea-9db7-3f58cac1bd4d"
    OPTIONSPR[RUSH]="f9c6fd6f-295a-4202-aabe-f82f318c4da9"
    OPTIONSPR[STANDARD]="aa260648-80a7-416f-8275-a21eeadd4e30"
    OPTIONSPR[SMART]="d26ac4ce-40be-460f-a185-a792ba659074"

    echo ${OPTIONSPR[$1]}
}